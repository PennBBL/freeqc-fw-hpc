#!/bin/bash
FLYWHEEL_BASE=/flywheel/v0
MANIFEST_FILE=$FLYWHEEL_BASE/manifest.json
CONFIG_FILE=$FLYWHEEL_BASE/config.json
ANALYSIS_ID=$(jq -r '.destination.id' $CONFIG_FILE)
INPUT_DIR=$FLYWHEEL_BASE/input
GEAR_OUTPUT_DIR=$FLYWHEEL_BASE/output
FREEQC_OUTPUT_DIR=$GEAR_OUTPUT_DIR/"$ANALYSIS_ID"
WORKING_DIR=$GEAR_OUTPUT_DIR/"$ANALYSIS_ID"_work
#BIDS_DIR=$GEAR_OUTPUT_DIR/bids_dataset
#EXE_SCRIPT=$GEAR_OUTPUT_DIR/freeqc_run.sh
CONTAINER='[flywheel/freeqc-fw-hpc]'

#https://github.com/PennBBL/rewardAnalysisReprocScripts/blob/master/freesurfer/cnrEulerCalc.sh

# CRITICAL: re-create the environment
cat ${FLYWHEEL_BASE}/docker-env.sh
source ${FLYWHEEL_BASE}/docker-env.sh

function parse_config {
  CONFIG_FILE=$FLYWHEEL_BASE/config.json
  MANIFEST_FILE=$FLYWHEEL_BASE/manifest.json

  if [[ -f $CONFIG_FILE ]]; then
    echo "$(cat $CONFIG_FILE | jq -r '.config.'$1)"
  else
    CONFIG_FILE=$MANIFEST_FILE
    echo "$(cat $CONFIG_FILE | jq -r '.config.'$1'.default')"
  fi
}

#CONFIG_FILE=$FLYWHEEL_BASE/config.json
#cat ${CONFIG_FILE} | grep 'save_partial_outputs' | cut -d ':' -f 2 |

config_save_outputs="$(parse_config 'save_partial_outputs')"
session_label=`python ${FLYWHEEL_BASE}/get_seslabel.py`


#echo -e "$CONTAINER BEGIN FREEQC DOCKERFILE\n"
#cat ${FLYWHEEL_BASE}/*Dockerfile
#echo -e "$CONTAINER END FREEQC DOCKERFILE \n"

# Unzip fmriprep output
unzip ${INPUT_DIR}/fmriprepdir/*.zip

#############################################################
##################### PROCESSING STEPS #####################
#############################################################

export SUBJECTS_DIR=$FREESURFER_HOME/subjects
FUNCTIONALS_DIR=$FREESURFER_HOME/sessions
source $FREESURFER_HOME/FreeSurferEnv.sh

####### fMRIPrep outputs that pass QA #######
# QA: Prior manual + Euler-based inspection for unchecked images
# bblid,seslabel,cnr_graycsf_lh,cnr_graycsf_rh,cnr_graywhite_lh,cnr_graywhite_rh,euler_lh,euler_rh
InDir=${INPUT_DIR}/fmriprepdir/*/freesurfer
#~/Documents/flywheel/antssstbids_fw_debug/5ea767e021d44102f5600847/freesurfer
OutDir=${GEAR_OUTPUT_DIR}
#~/Documents/flywheel/freesurfer-quality-calc_fw_debug/output/data
#mkdir ${OutDir}
subj=`ls -d ${InDir}/sub* | sed 's#.*/##'`
bblid=`echo ${subj} | cut -d "-" -f 2`
seslabel=`echo ${session_label} | cut -d "-" -f 2`
surfDir=${InDir}/${subj}/surf ### MIGHT HAVE TO GIT RID OF DIRS BETWEEN INPUT AND FREESURFER
mriDir=${InDir}/${subj}/mri

# ----- CNR ----- #
${FREESURFER_HOME}/bin/mri_cnr ${surfDir} ${mriDir}/orig.mgz > ${OutDir}/cnr.txt
total=`grep "total CNR" ${OutDir}/cnr.txt | cut -f 4 -d " "`
cnr=`grep "gray/white CNR" ${OutDir}/cnr.txt`
cnr_graycsf_lh=`echo $cnr | cut -d "," -f 2 | cut -d "=" -f 2 | cut -d " " -f 2`
cnr_graycsf_rh=`echo $cnr | cut -d "," -f 3 | cut -d "=" -f 2 | cut -d " " -f 2`
cnr_graywhite_lh=`echo $cnr | cut -d "," -f 1 | cut -d "=" -f 2 | cut -d " " -f 2`
cnr_graywhite_rh=`echo $cnr | cut -d "," -f 2 | cut -d "=" -f 3 | cut -d " " -f 2`

# ---- Euler ---- #
#${FREESURFER_HOME}/mris_euler_number -o ${OutDir}/euler_lh.txt ${surfDir}/lh.orig.nofix
#out_lh=`${FREESURFER_HOME}/mris_euler_number -o ${OutDir}/euler_lh.txt ${surfDir}/lh.orig.nofix`
#${FREESURFER_HOME}/mris_euler_number -o ${OutDir}/euler_lh.txt ${surfDir}/lh.orig.nofix | tee $out_lh
#out_lh=$(${FREESURFER_HOME}/mris_euler_number -o ${OutDir}/euler_lh.txt ${surfDir}/lh.orig.nofix | tee /dev/tty)
#out_lh=$(${FREESURFER_HOME}/mris_euler_number ${surfDir}/lh.orig.nofix)
#${FREESURFER_HOME}/mris_euler_number ${surfDir}/lh.orig.nofix > ${OutDir}/out_lh.txt
#out_lh=`${FREESURFER_HOME}/mris_euler_number ${surfDir}/lh.orig.nofix`
#echo `${FREESURFER_HOME}/mris_euler_number ${surfDir}/lh.orig.nofix` > ${OutDir}/out_lh.txt
#${FREESURFER_HOME}/mris_euler_number ${surfDir}/lh.orig.nofix > ${OutDir}/out_lh.txt
#holes_lh=`grep " " ${OutDir}/euler_lh.txt | sed -e 's/^[[:space:]]*//'`

script -c "${FREESURFER_HOME}/bin/mris_euler_number ${surfDir}/lh.orig.nofix" ${OutDir}/out_lh.txt
holes_lh=`cat ${OutDir}/out_lh.txt | grep "euler" | cut -d ">" -f 2 | cut -d "h" -f 1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'`
euler_lh=`cat ${OutDir}/out_lh.txt | grep "euler" | cut -d "=" -f 4 | cut -d " " -f 2`

script -c "${FREESURFER_HOME}/bin/mris_euler_number ${surfDir}/rh.orig.nofix" ${OutDir}/out_rh.txt
holes_rh=`cat ${OutDir}/out_rh.txt | grep "euler" | cut -d ">" -f 2 | cut -d "h" -f 1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'`
euler_rh=`cat ${OutDir}/out_rh.txt | grep "euler" | cut -d "=" -f 4 | cut -d " " -f 2`

holes_total=`expr $holes_lh + $holes_rh`
euler_total=`expr $euler_lh + $euler_rh`

# ----- CSV ----- #
echo "bblid,seslabel,cnr_graycsf_lh,cnr_graycsf_rh,cnr_graywhite_lh,cnr_graywhite_rh,holes_lh,holes_rh,holes_total,euler_lh,euler_rh,euler_total" > ${OutDir}/${subj}_${session_label}_quality.csv
echo "${bblid},${seslabel},${cnr_graycsf_lh},${cnr_graycsf_rh},${cnr_graywhite_lh},${cnr_graywhite_rh},${holes_lh},${holes_rh},${holes_total},${euler_lh},${euler_rh},${euler_total}" >> ${OutDir}/${subj}_${session_label}_quality.csv

# Remove unnecessary files
rm ${OutDir}/cnr.txt
rm ${OutDir}/out_lh.txt
rm ${OutDir}/out_rh.txt

#############################################################
#############################################################
#############################################################

# Quantify regional values

#############################################################
#############################################################
#############################################################


#if [[ $FREEQC_EXITSTATUS == 0 ]] ; then ### Some other check of outputs

  # Generate zipped output of freeqc
  cd "$GEAR_OUTPUT_DIR" # September 3, 2020: Seems redundant
  echo "$CONTAINER  generating zip archive from outputs..."
  time zip -q -r "$GEAR_OUTPUT_DIR"/freeqc_"$SUB_ID"_"${session_label}"_"$ANALYSIS_ID" $(basename "$FREEQC_OUTPUT_DIR")

  chmod -R 777 $GEAR_OUTPUT_DIR

#if [[ $config_save_outputs == 'true' ]] ; then
#  echo "$CONTAINER  Error occurred. Config 'save_outputs' set to true. Zipping up outputs."
#  cd "$GEAR_OUTPUT_DIR"
#  time zip -q -r "$GEAR_OUTPUT_DIR"/debug_freeqc_"$ANALYSIS_ID"  $(basename "$FREEQC_OUTPUT_DIR")
#  time zip -q -r "$GEAR_OUTPUT_DIR"/debug_freeqc_work_"$ANALYSIS_ID" $(basename "$WORKING_DIR")
#  chmod -R 777 $GEAR_OUTPUT_DIR

  # COPY ANALYSIS TO PROJECT LEVEL IF MULTI-SESSION. Q: Why project level? And not subject?
  #   Use Python SDK to accomplish this task

  /usr/local/miniconda/bin/python ${FLYWHEEL_BASE}/move_to_project.py
  if [[ $? != 0 ]]; then
    echo "$CONTAINER  Problem resolving multi-session structure! Exiting (1)"
    exit 1
  fi

#else
#  echo "$CONTAINER  Errors encountered during execution. Save outputs config not set. Cleaning up and exiting."
#fi

# Clean up
rm -rf "$WORKING_DIR"
rm -rf "$FREEQC_OUTPUT_DIR"

echo -e "Wrote: `ls -lh $GEAR_OUTPUT_DIR`"

#exit $FREEQC_EXITSTATUS
